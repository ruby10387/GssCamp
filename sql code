--No1
SELECT  blr.KEEPER_ID AS KeeperId,
		mm.USER_CNAME AS CName,
		mm.USER_ENAME AS EName,
		YEAR(blr.LEND_DATE) AS BorrowYear,
		COUNT(blr.LEND_DATE) AS BorrowCnt
FROM BOOK_LEND_RECORD blr INNER JOIN MEMBER_M mm ON blr.CRE_USR=mm.USER_ID 
GROUP BY blr.KEEPER_ID,mm.USER_CNAME,mm.USER_ENAME,YEAR(blr.LEND_DATE)
ORDER BY KeeperId,BorrowYear;

--No2
SELECT  TOP 5 blr.BOOK_ID AS BookId,
		bd.BOOK_NAME AS BookName,
		COUNT(blr.LEND_DATE) AS QTY
FROM BOOK_LEND_RECORD blr INNER JOIN BOOK_DATA bd ON blr.BOOK_ID=bd.BOOK_ID
GROUP BY blr.BOOK_ID,bd.BOOK_NAME
ORDER BY QTY DESC;

--No3
SELECT  CASE (MONTH(blr.LEND_DATE)-1)/3 
		WHEN 0 THEN '2019/01~2019/03'
		WHEN 1 THEN '2019/04~2019/06' 
		WHEN 2 THEN '2019/07~2019/09'
		WHEN 3 THEN '2019/10~2019/12'END AS Quarter,
		COUNT(blr.LEND_DATE) AS Cnt 
FROM BOOK_LEND_RECORD blr
WHERE YEAR(blr.LEND_DATE)=2019
GROUP BY (MONTH(blr.LEND_DATE)-1)/3;

--No4
SELECT  tb.Seq,
		tb.BookClass,
		tb.BoolId,
		tb.BookName,
		tb.Cnt
FROM (
	SELECT  ROW_NUMBER() OVER(PARTITION BY bc.BOOK_CLASS_NAME ORDER BY bc.BOOK_CLASS_NAME,COUNT(blr.LEND_DATE) DESC) AS Seq,
			bc.BOOK_CLASS_NAME AS BookClass,
			bd.BOOK_ID AS BoolId,
			bd.BOOK_NAME AS BookName,
			COUNT(blr.LEND_DATE) AS Cnt
	FROM BOOK_DATA bd INNER JOIN BOOK_CLASS bc ON bd.BOOK_CLASS_ID=bc.BOOK_CLASS_ID 
		 INNER JOIN BOOK_LEND_RECORD blr ON bd.BOOK_ID=blr.BOOK_ID
	GROUP BY bc.BOOK_CLASS_NAME,bd.BOOK_ID,bd.BOOK_NAME
) AS tb
WHERE tb.Seq <=3;

--No5
SELECT  tb.ClassId,
		tb.ClassName,
		SUM(CASE tb.[Year] WHEN 2016 THEN tb.Qty ELSE 0 END) AS CNT2016,
		SUM(CASE tb.[Year] WHEN 2017 THEN tb.Qty ELSE 0 END) AS CNT2017,
		SUM(CASE tb.[Year] WHEN 2018 THEN tb.Qty ELSE 0 END) AS CNT2018,
		SUM(CASE tb.[Year] WHEN 2019 THEN tb.Qty ELSE 0 END) AS CNT2019 
FROM (
	SELECT  bd.BOOK_CLASS_ID AS ClassId,
			bc.BOOK_CLASS_NAME AS ClassName,
			YEAR(blr.LEND_DATE) AS Year,
			COUNT(blr.LEND_DATE) AS Qty
	FROM BOOK_LEND_RECORD blr INNER JOIN BOOK_DATA bd ON blr.BOOK_ID=bd.BOOK_ID
		 INNER JOIN BOOK_CLASS bc ON bc.BOOK_CLASS_ID=bd.BOOK_CLASS_ID
	WHERE YEAR(blr.LEND_DATE)>=2016
	GROUP BY bd.BOOK_CLASS_ID,bc.BOOK_CLASS_NAME,YEAR(blr.LEND_DATE)
) AS tb
GROUP BY tb.ClassId,tb.ClassName
ORDER BY tb.ClassId;

--No6
SELECT  PVT.ClassId,
		PVT.ClassName,
		[2016] AS CNT2016,
		[2017] AS CNT2017,
		[2018] AS CNT2018,
		[2019] AS CNT2019
FROM (
	SELECT  bd.BOOK_CLASS_ID AS ClassId,
			bc.BOOK_CLASS_NAME AS ClassName,
			YEAR(blr.LEND_DATE) AS Year
	FROM BOOK_LEND_RECORD blr JOIN BOOK_DATA bd ON blr.BOOK_ID=bd.BOOK_ID
		 INNER JOIN BOOK_CLASS bc ON bc.BOOK_CLASS_ID=bd.BOOK_CLASS_ID
	WHERE YEAR(blr.LEND_DATE)>=2016
) AS tb
PIVOT(COUNT(tb.Year) FOR tb.Year IN([2016],[2017],[2018],[2019])) AS PVT
ORDER BY ClassId;

--No7
SELECT * FROM BOOK_DATA bd;
SELECT * FROM BOOK_LEND_RECORD blr;
SELECT * FROM BOOK_CLASS bc;
SELECT * FROM BOOK_CODE bco;
SELECT * FROM MEMBER_M mm;
SELECT  bd.BOOK_ID AS 書本ID,
		FORMAT(bd.BOOK_BOUGHT_DATE,'yyyy/MM/dd') AS 購書日期,
		FORMAT(blr.LEND_DATE,'yyyy/MM/dd') AS 借閱日期,
		CONCAT(bc.BOOK_CLASS_ID,'-',bc.BOOK_CLASS_NAME) AS 書籍類別,
		CONCAT(blr.KEEPER_ID,'-',mm.USER_CNAME,'(',mm.USER_ENAME,')') AS 借閱人,
		CONCAT(bco.CODE_ID,'-',bco.CODE_NAME) AS 狀態,
		CONCAT(bd.BOOK_AMOUNT,'元') AS 購書金額
FROM BOOK_LEND_RECORD blr INNER JOIN  BOOK_DATA bd ON blr.BOOK_ID=bd.BOOK_ID
	 INNER JOIN BOOK_CLASS bc ON bd.BOOK_CLASS_ID=bc.BOOK_CLASS_ID
	 INNER JOIN BOOK_CODE bco ON bd.BOOK_STATUS=bco.CODE_ID
	 INNER JOIN MEMBER_M mm ON blr.KEEPER_ID=mm.USER_ID
WHERE mm.USER_CNAME='李四'
ORDER BY bd.BOOK_AMOUNT DESC;

--No8
SELECT  bd.BOOK_ID AS 書本ID,
		FORMAT(bd.BOOK_BOUGHT_DATE,'yyyy/MM/dd') AS 購書日期,
		FORMAT(blr.LEND_DATE,'yyyy/MM/dd') AS 借閱日期,
		CONCAT(bc.BOOK_CLASS_ID,'-',bc.BOOK_CLASS_NAME) AS 書籍類別,
		CONCAT(blr.KEEPER_ID,'-',mm.USER_CNAME,'(',mm.USER_ENAME,')') AS 借閱人,
		CONCAT(bco.CODE_ID,'-',bco.CODE_NAME) AS 狀態,
		CONCAT(bd.BOOK_AMOUNT,'元') AS 購書金額
INTO TEST
FROM BOOK_LEND_RECORD blr INNER JOIN  BOOK_DATA bd ON blr.BOOK_ID=bd.BOOK_ID
	 INNER JOIN BOOK_CLASS bc ON bd.BOOK_CLASS_ID=bc.BOOK_CLASS_ID
	 INNER JOIN BOOK_CODE bco ON bd.BOOK_STATUS=bco.CODE_ID
	 INNER JOIN MEMBER_M mm ON blr.KEEPER_ID=mm.USER_ID
WHERE mm.USER_CNAME='李四'
ORDER BY bd.BOOK_AMOUNT DESC;
SELECT * FROM TEST t;
